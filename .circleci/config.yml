# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

# Aliases are shorthand references for common settings.
aliases:
  # Cache Management
  - &restore-node-modules
    keys:
      - v2-node-modules-{{ checksum "app/package.json" }}
  - &save-node-modules
    paths:
      - app/node_modules
    key: v2-node-modules-{{ checksum "app/package.json" }}

  - &restore-spa-build
    keys:
      - v2-spa-build-{{ .Branch }} #-{{ .Revision }}
  - &save-spa-build
    paths:
      - app/build
    key: v2-spa-build-{{ .Branch }} #-{{ .Revision }}

  - &restore-functions-build
    keys:
      - v2-functions-build-{{ .Branch }} #-{{ .Revision }}
  - &save-functions-build
    paths:
      - functions/bin
    key: v2-functions-build-{{ .Branch }} #-{{ .Revision }}

  # Branch Filtering
  - &filter-only-master
    branches:
      only:
        - master
  - &filter-ignore-gh-pages
    branches:
      ignore: gh-pages
  
# Job definitions. Job execution is orchestrated in the 'workflows' section.
jobs:
  # Build and test the components
  build_test_functions:
    docker:
      - image: microsoft/dotnet:2.1-sdk
    steps:
      - checkout 
      - run: 
          name: Build Functions
          command: cd functions && dotnet build
  build_test_spa:
    docker:
      - image: circleci/node:8
    steps:
      - checkout 
      - restore_cache: *restore-node-modules
      - run: 
          name: Install app packages
          command: cd app && yarn install
      - save_cache: *save-node-modules
      - run: 
          name: Build SPA app
          command: cd app && yarn build
      - save_cache: *save-spa-build
      - run: 
          name: Test SPA app
          command: cd app && yarn test -w 1 --coverage
  publish_to_test:
    docker:
      - image: microsoft/azure-cli
    steps:
      - checkout 
      - restore_cache: *restore-spa-build
      - restore_cache: *restore-functions-build
      - run: 
          name: Install Azure Functions Core Tools
          command: npm i -g azure-functions-core-tools@core --unsafe-perm true
      - run:
          name: Login with Azure Service Principal
          command: az login --service_principal -u $SERVICE_PRINCIPAL_USER -p $SERVICE_PRINCIPAL_PASSWORD --tenant $SERVICE_PRINCIPAL_TENANT
      - run: 
          name: Publish Test App Service
          command: cd functions/bin/Debug/netstandard2.0 && func azure functionapp publish $FUNCTION_APP_TEST
# Job orchestration
workflows:
  version: 2
  # Build and test the code on every commit. 
  # Publish the style guide on successful build/test of master.
  build-test-and-publish:
    jobs:
      - build_test_functions:
          filters: *filter-ignore-gh-pages
      - :
          filters: *filter-ignore-gh-pages
      - publish:
          requires:
            - build_test_functions
            - build_test_spa
          context: azfun-fsharp
