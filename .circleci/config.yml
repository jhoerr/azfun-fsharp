# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

# Aliases are shorthand references for common settings.
aliases:
  # Branch Filtering
  - &filter-only-master
    branches:
      only:
        - master
  - &filter-ignore-gh-pages
    branches:
      ignore: gh-pages

defaults: &azureDefaults
  docker:
    - image: microsoft/azure-cli

defaults: &dotnetDefaults
  docker:
    - image: microsoft/dotnet:2.1-sdk

commands: 
  publish:
    description: "Publish package to specified environment"
    parameters:
      environment:
        type: string
        default: "test"
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Login with Azure Service Principal
          command: az login --service-principal -u $SERVICE_PRINCIPAL_USER -p $SERVICE_PRINCIPAL_PASSWORD --tenant $SERVICE_PRINCIPAL_TENANT
      - run: 
          name: Publish Functions + SPA package to Test Function App
          command: az webapp deployment source config-zip --name $FUNCTION_APP_<<parameters.environment>> --resource-group $FUNCTION_APP_RESOURCE_GROUP_<<parameters.environment>> --src /tmp/workspace/publish/publish.zip
  migrate_db:
    description: "Migrate database in specified environment"
    parameters:
      environment:
        type: string
        default: "test"
    steps:
      - checkout 
      - run: 
          name: Build database migrator
          command: cd database && dotnet build
      - run:
          name: Migrate test database
          command: dotnet database/bin/Debug/netcoreapp2.1/database.dll "$DB_CONNECTION_<<parameters.environment>>" up 

# Job definitions. Job execution is orchestrated in the 'workflows' section.
jobs:
  # Build and test the Azure Functions
  build:
    <<: *dotnetDefaults
    steps:
      - run:
          # A workspace allows us to pass files/artifacts from job to job.
          # https://circleci.com/blog/deep-diving-into-circleci-workspaces/
          name: Create workspace
          command: mkdir -p /tmp/workspace
      - checkout 
      - run: 
          name: Build Functions
          command: cd functions && dotnet build -c Release
      - run:
          name: Save compiled Functions to workspace
          command: cp -a functions/bin/Release/netstandard2.0/. /tmp/workspace/publish/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - publish
  # Build (zip) a functions deployment package
  package:
    docker:
      - image: circleci/node:8
    steps:
      - checkout 
      - attach_workspace:
          at: /tmp/workspace
      - run: 
          name: Create Functions publish package
          command: cd /tmp/workspace/publish && zip -r publish.zip ./*
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - publish/publish.zip
  # Publish the deployment package to the TEST Azure Function App
  publish_to_test:
    <<: *azureDefaults
    steps:
      - publish:
          environment: "test"
  publish_to_production:
    <<: *azureDefaults
    steps:
      - publish:
          environment: "production"
  migrate_test_db:
    <<: *dotnetDefaults
    steps:
      - migrate_db:
          environment: "test"
  migrate_production_db:
    <<: *dotnetDefaults
    steps:
      - migrate_db:
          environment: "production"
# Job orchestration
workflows:
  version: 2
  # Build and test the code on every commit. 
  # Publish the style guide on successful build/test of master.
  build-and-publish:
    jobs:
      - build:
          filters: *filter-ignore-gh-pages
      - package:
          requires:
            - build
          context: azfun-fsharp
      - publish_to_test:
          requires:
            - package
          context: azfun-fsharp
#      - migrate_test_db:
#          requires:
#            - publish_to_test
#          context: azfun-fsharp
      - publish_to_production:
          filters: *filter-only-master
          requires:
            - package
          context: azfun-fsharp
      - migrate_production_db:
          filters: *filter-only-master
          requires:
            - publish_to_production
          context: azfun-fsharp
